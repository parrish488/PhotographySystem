@model PagedList.IPagedList<PhotgraphyMVC.Models.Event>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Events";
}

<h2>All Events</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<p>
    <span>@Html.ActionLink("All", "Index", new { taxYear = "All" })</span>
    @{
        HashSet<int> eventYears = new HashSet<int>();
        foreach (var item in Model)
        {
            eventYears.Add(item.EventDate.Year);
        }

        foreach (int year in eventYears)
        {
            <span>  |  @Html.ActionLink(year.ToString(), "Index", new { taxYear = year })</span>
        }
    }
</p>

@using (Html.BeginForm("Index", "Events", FormMethod.Get))
{
    <p>
        Find by name: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
        <input type="submit" value="Search" />
    </p>
}

<table class="table">
    <tr>
        <th>
            @Html.ActionLink("First Name", "Index", new { sortOrder = ViewBag.FirstNameSortParm })
        </th>
        <th>
            @Html.ActionLink("Last Name", "Index", new { sortOrder = ViewBag.LastNameSortParm })
        </th>
        <th>
            @Html.ActionLink("Event Date", "Index", new { sortOrder = ViewBag.DateSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Event Type", "Index", new { sortOrder = ViewBag.EventTypeSortParm })
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Client.FirstName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Client.LastName)
        </td>
        <td>
            @item.EventDate.ToString("dddd, MMMM dd yyyy hh:mm tt")
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.EventType)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.EventID }) |
            @Html.ActionLink("Details", "Details", new { id=item.EventID }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.EventID })
        </td>
    </tr>
}

</table>

<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
